# Open-LLM-VTuber System Checker
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã VTuber

param(
    [switch]$Fix,
    [switch]$Verbose
)

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É
[Console]::OutputEncoding = [System.Text.Encoding]::UTF8

Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã Open-LLM-VTuber..." -ForegroundColor Cyan
Write-Host "================================================" -ForegroundColor Gray
Write-Host ""

$allGood = $true

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
Write-Host "1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Python..." -ForegroundColor Yellow
try {
    $pythonVersion = python --version 2>&1
    if ($pythonVersion -match "Python 3\.(1[0-9]|[2-9][0-9])") {
        Write-Host "   ‚úÖ Python –Ω–∞–π–¥–µ–Ω: $pythonVersion" -ForegroundColor Green
    } else {
        Write-Host "   ‚ö†Ô∏è Python –Ω–∞–π–¥–µ–Ω, –Ω–æ –≤–µ—Ä—Å–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å —É—Å—Ç–∞—Ä–µ–≤—à–µ–π: $pythonVersion" -ForegroundColor Yellow
        $allGood = $false
    }
} catch {
    Write-Host "   ‚ùå Python –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
    Write-Host "   üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.10+ —Å https://python.org" -ForegroundColor Cyan
    $allGood = $false
}

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
Write-Host "2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js..." -ForegroundColor Yellow
try {
    $nodeVersion = node --version 2>&1
    if ($nodeVersion -match "v(1[8-9]|[2-9][0-9])") {
        Write-Host "   ‚úÖ Node.js –Ω–∞–π–¥–µ–Ω: $nodeVersion" -ForegroundColor Green
    } else {
        Write-Host "   ‚ö†Ô∏è Node.js –Ω–∞–π–¥–µ–Ω, –Ω–æ –≤–µ—Ä—Å–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å —É—Å—Ç–∞—Ä–µ–≤—à–µ–π: $nodeVersion" -ForegroundColor Yellow
    }
} catch {
    Write-Host "   ‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
    Write-Host "   üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js 18+ —Å https://nodejs.org" -ForegroundColor Cyan
    $allGood = $false
}

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python
Write-Host "3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..." -ForegroundColor Yellow
$requiredPackages = @("fastapi", "uvicorn", "loguru", "pydantic", "openai")
$missingPackages = @()

foreach ($package in $requiredPackages) {
    try {
        python -c "import $package" 2>$null
        Write-Host "   ‚úÖ $package" -ForegroundColor Green
    } catch {
        Write-Host "   ‚ùå $package" -ForegroundColor Red
        $missingPackages += $package
        $allGood = $false
    }
}

if ($missingPackages.Count -gt 0) {
    Write-Host "   üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–∞–∫–µ—Ç—ã:" -ForegroundColor Cyan
    Write-Host "      pip install -r requirements.txt" -ForegroundColor Gray
}

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤
Write-Host "4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤..." -ForegroundColor Yellow
try {
    python -c "import mcp_server_time" 2>$null
    Write-Host "   ‚úÖ mcp-server-time" -ForegroundColor Green
} catch {
    Write-Host "   ‚ùå mcp-server-time" -ForegroundColor Red
    Write-Host "   üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install mcp-server-time" -ForegroundColor Cyan
    $allGood = $false
}

try {
    npx duckduckgo-mcp-server --help 2>$null
    Write-Host "   ‚úÖ duckduckgo-mcp-server" -ForegroundColor Green
} catch {
    Write-Host "   ‚ùå duckduckgo-mcp-server" -ForegroundColor Red
    Write-Host "   üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: npm install -g duckduckgo-mcp-server" -ForegroundColor Cyan
    $allGood = $false
}

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
Write-Host "5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..." -ForegroundColor Yellow
if (Test-Path "conf.yaml") {
    Write-Host "   ‚úÖ conf.yaml –Ω–∞–π–¥–µ–Ω" -ForegroundColor Green
} else {
    Write-Host "   ‚ùå conf.yaml –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
    $allGood = $false
}

if (Test-Path "mcp_servers.json") {
    Write-Host "   ‚úÖ mcp_servers.json –Ω–∞–π–¥–µ–Ω" -ForegroundColor Green
} else {
    Write-Host "   ‚ùå mcp_servers.json –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
    $allGood = $false
}

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ LM Studio
Write-Host "6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ LM Studio..." -ForegroundColor Yellow
try {
    $response = Invoke-RestMethod -Uri "http://127.0.0.1:1234/v1/models" -Method GET -TimeoutSec 5
    Write-Host "   ‚úÖ LM Studio –¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Green
    Write-Host "   üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏:" -ForegroundColor Cyan
    foreach ($model in $response.data) {
        Write-Host "      - $($model.id)" -ForegroundColor Gray
    }
} catch {
    Write-Host "   ‚ùå LM Studio –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Red
    Write-Host "   üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ LM Studio –∏ –Ω–∞–∂–º–∏—Ç–µ 'Start Server'" -ForegroundColor Cyan
    $allGood = $false
}

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
Write-Host "7Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤..." -ForegroundColor Yellow
$ports = @(1234, 12393)
foreach ($port in $ports) {
    try {
        $connection = Test-NetConnection -ComputerName localhost -Port $port -WarningAction SilentlyContinue
        if ($connection.TcpTestSucceeded) {
            Write-Host "   ‚úÖ –ü–æ—Ä—Ç $port –æ—Ç–∫—Ä—ã—Ç" -ForegroundColor Green
        } else {
            Write-Host "   ‚ùå –ü–æ—Ä—Ç $port –∑–∞–∫—Ä—ã—Ç" -ForegroundColor Red
            $allGood = $false
        }
    } catch {
        Write-Host "   ‚ùå –ü–æ—Ä—Ç $port –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Red
        $allGood = $false
    }
}

# –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
Write-Host ""
Write-Host "================================================" -ForegroundColor Gray
if ($allGood) {
    Write-Host "üéâ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!" -ForegroundColor Green
    Write-Host "üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ VTuber –∫–æ–º–∞–Ω–¥–æ–π: .\start_vtuber.ps1" -ForegroundColor Cyan
} else {
    Write-Host "‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã" -ForegroundColor Yellow
    Write-Host "üí° –ò—Å–ø—Ä–∞–≤—å—Ç–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É —Å–Ω–æ–≤–∞" -ForegroundColor Cyan
}

Write-Host "" 